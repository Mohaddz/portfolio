<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Operating Systems on Portfolio</title>
    <link>http://localhost:1313/portfolio/tags/operating-systems/</link>
    <description>Recent content in Operating Systems on Portfolio</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Tue, 15 Nov 2022 10:00:00 +0300</lastBuildDate>
    <atom:link href="http://localhost:1313/portfolio/tags/operating-systems/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dynamic vs Normal Round Robin Scheduling Comparison</title>
      <link>http://localhost:1313/portfolio/projects/drr/</link>
      <pubDate>Tue, 15 Nov 2022 10:00:00 +0300</pubDate>
      <guid>http://localhost:1313/portfolio/projects/drr/</guid>
      <description>Github Repo 1. Introduction CPU scheduling is a crucial aspect of operating systems, allowing efficient utilization of CPU and I/O resources. This project implements and compares two variations of the Round Robin (RR) algorithm: Normal Round Robin and Dynamic Round Robin. The Round Robin algorithm is designed for time-sharing systems, allowing processes to use the CPU for a fixed time quantum before switching to the next process.&#xA;1.1 Understanding CPU Scheduling Before diving into the specifics of Round Robin algorithms, it&amp;rsquo;s essential to understand what CPU scheduling is:</description>
    </item>
  </channel>
</rss>
